---
import Layout from "../../layouts/Layout.astro";
import AppShell from "../../components/AppShell.astro";
import { getCollection } from "astro:content";
import { getTagColor } from "./util";

// Load all published posts
const allEntries = await getCollection("blog");
const publishedPosts = allEntries
  .filter((entry) => entry.data.status === "published")
  .sort((a, b) => b.data.timestamp.getTime() - a.data.timestamp.getTime());

const formatDate = (date: Date): string => {
  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};
---

<Layout
  title="Blog - Gabriele Angeletti"
  description="Thoughts on software engineering, technology, and building great products. Read about clean code, scalable applications, and best practices."
>
  <AppShell>
    <div id="blog" class="p-4 lg:py-18">
      <div class="max-w-4xl mx-auto">
        <h1 class="text-4xl font-bold text-base-content mb-2">Blog</h1>
        <p class="text-base-content/60 mb-12">
          Thoughts on software engineering, technology, and building great products.
        </p>

        <div class="space-y-8">
          {
            publishedPosts.map((entry) => (
              <div class="card bg-base-100 shadow-lg hover:shadow-xl transition-shadow duration-300">
                <div class="card-body">
                  <div class="flex flex-wrap gap-2 mb-4">
                    {entry.data.tags.map((tag) => {
                      const { backgroundColor, textColor } = getTagColor(tag);
                      return (
                        <a
                          href={`/blog/tag/${tag}`}
                          class="badge badge-sm hover:scale-105 transition-transform cursor-pointer"
                          style={`background-color: ${backgroundColor}; color: ${textColor}`}
                        >
                          {tag}
                        </a>
                      );
                    })}
                  </div>

                  <a href={`/blog/${entry.data.slug}`} class="hover:text-primary transition-colors">
                    <h2 class="card-title text-2xl font-bold text-base-content mb-3">
                      {entry.data.title}
                    </h2>
                  </a>

                  <div class="flex items-center gap-2 text-sm text-base-content/60 mb-4">
                    {entry.data.author && (
                      <>
                        <span>By {entry.data.author}</span>
                        <span>â€¢</span>
                      </>
                    )}
                    <span>{formatDate(entry.data.timestamp)}</span>
                  </div>

                  <p class="text-base-content/80 leading-relaxed mb-4">
                    {entry.data.excerpt || entry.data.title}
                  </p>

                  <div class="card-actions justify-end">
                    <a href={`/blog/${entry.data.slug}`} class="btn btn-primary btn-sm">
                      Read More
                    </a>
                  </div>
                </div>
              </div>
            ))
          }
        </div>

        {
          publishedPosts.length === 0 && (
            <div class="text-center py-12">
              <p class="text-base-content/60 text-lg">No published posts yet. Check back soon!</p>
            </div>
          )
        }
      </div>
    </div>
  </AppShell>
</Layout>
